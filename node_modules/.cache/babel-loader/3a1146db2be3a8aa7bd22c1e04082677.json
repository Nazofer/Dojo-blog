{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const abortCont = new AbortController();\n    setTimeout(() => {\n      fetch(url, {\n        signal: abortCont.signal\n      }).then(res => {\n        if (!res.ok) {\n          throw Error('Couldn\\'t fetch the data');\n        }\n\n        return res.json();\n      }).then(data => {\n        // console.log(data);\n        setData(data);\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        if (err.name === 'AbortError') {\n          console.log('fetch aborted');\n        } else {\n          setIsPending(false);\n          setError(err.message);\n        }\n      });\n    }, 1000);\n    return () => console.log('cleanup');\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"5ZSrrBruh/jjI+e3p894StIFiss=\");\n\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","isPending","setIsPending","error","setError","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message"],"sources":["/home/nazar/projects/react/dojo2/src/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n  const [ data, setData] = useState(null);\n  const [ isPending, setIsPending ] = useState(true);\n  const [ error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n\n    setTimeout(() => {\n      fetch(url, { signal: abortCont.signal})\n        .then(res => {\n          if (!res.ok) {\n            throw Error('Couldn\\'t fetch the data');\n          }\n          return res.json();\n        })\n        .then(data => {\n          // console.log(data);\n          setData(data);\n          setIsPending(false);\n          setError(null);\n        })\n        .catch(err => {\n          if (err.name === 'AbortError') {\n            console.log('fetch aborted');\n          } else {\n            setIsPending(false);\n            setError(err.message);\n          }\n        })\n    }, 1000)\n\n    return () => console.log('cleanup');\n\n  }, [url]);\n\n  return { data, isPending, error };\n}\n\nexport default useFetch;"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;EAAA;;EACxB,MAAM,CAAEC,IAAF,EAAQC,OAAR,IAAmBL,QAAQ,CAAC,IAAD,CAAjC;EACA,MAAM,CAAEM,SAAF,EAAaC,YAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C;EACA,MAAM,CAAEQ,KAAF,EAASC,QAAT,IAAqBT,QAAQ,CAAC,IAAD,CAAnC;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,IAAIC,eAAJ,EAAlB;IAEAC,UAAU,CAAC,MAAM;MACfC,KAAK,CAACV,GAAD,EAAM;QAAEW,MAAM,EAAEJ,SAAS,CAACI;MAApB,CAAN,CAAL,CACGC,IADH,CACQC,GAAG,IAAI;QACX,IAAI,CAACA,GAAG,CAACC,EAAT,EAAa;UACX,MAAMC,KAAK,CAAC,0BAAD,CAAX;QACD;;QACD,OAAOF,GAAG,CAACG,IAAJ,EAAP;MACD,CANH,EAOGJ,IAPH,CAOQX,IAAI,IAAI;QACZ;QACAC,OAAO,CAACD,IAAD,CAAP;QACAG,YAAY,CAAC,KAAD,CAAZ;QACAE,QAAQ,CAAC,IAAD,CAAR;MACD,CAZH,EAaGW,KAbH,CAaSC,GAAG,IAAI;QACZ,IAAIA,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;UAC7BC,OAAO,CAACC,GAAR,CAAY,eAAZ;QACD,CAFD,MAEO;UACLjB,YAAY,CAAC,KAAD,CAAZ;UACAE,QAAQ,CAACY,GAAG,CAACI,OAAL,CAAR;QACD;MACF,CApBH;IAqBD,CAtBS,EAsBP,IAtBO,CAAV;IAwBA,OAAO,MAAMF,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAb;EAED,CA7BQ,EA6BN,CAACrB,GAAD,CA7BM,CAAT;EA+BA,OAAO;IAAEC,IAAF;IAAQE,SAAR;IAAmBE;EAAnB,CAAP;AACD,CArCD;;GAAMN,Q;;AAuCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}